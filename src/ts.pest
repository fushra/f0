// Static types
STRING = { "\"" ~ ASCII* ~ "\"" }
NUMBER = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
WHITESPACE = _{ " " }

BOOL_TRUE = { "true" }
BOOL_FALSE = { "false" }
BOOL = _{ BOOL_TRUE | BOOL_FALSE }

NULL = { "null" }

// Full file
program = { SOI ~ NEWLINE* ~ (expression ~ (NEWLINE | ";") ~ NEWLINE*)* ~ EOI }

// Assorted operators
not_equal = @{ "!=" }
double_equal = @{ "==" }
triple_equal = @{ "===" }
greater_than = @{ ">" }
greater_than_equal = @{ ">=" }
less_than = @{ "<" }
less_than_equal = @{ "<=" }
plus = @{ "+" }
minus = @{ "-" }
divide = @{ "/" }
multiply = @{ "*" }
inverse = @{ "!" }

// Expression code
expression = { equality }

equality = { comparision ~ ((not_equal | double_equal | triple_equal) ~ comparision)* }
comparision = { term ~ ((greater_than | greater_than_equal | less_than | less_than_equal) ~ term)* }
term = { factor ~ ((minus | plus) ~ factor)* }
factor = { unary ~ ((divide | multiply) ~ unary)* }
unary = { ((inverse | minus) ~  unary) | grouping | literal }
grouping = { "(" ~ expression ~ ")" }

literal = _{ (STRING | NUMBER | BOOL | NULL) }
